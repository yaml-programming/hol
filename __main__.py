import fileinput
import sys

import yaml
from nx_yaml import NxSafeDumper, NxSafeLoader
import networkx as nx
import matplotlib.pyplot as plt
from discopy import monoidal, frobenius


class Sig(frobenius.Box):
    """
    The frobenius signature based on a directed graph
    An arrow in the free category generated by the signature
    """
    def __init__(self, graph: nx.DiGraph, node: str):
        super().__init__(
            node,
            frobenius.Ty(*sorted(graph.predecessors(node))),
            frobenius.Ty(*sorted(graph.successors(node))))

data_out = yaml.compose(open(sys.argv[1]), Loader=NxSafeLoader)
# nx.draw_planar(data_out, with_labels=True, node_size=4000)
# plt.show()
# (Sig(data_out, sys.argv[1])).draw(path='tmp.jpg')

# f = Sig(data_out, 'either').draw()
# f = Sig(data_out, 'maybe').draw()

yaml.serialize(data_out, sys.stdout, Dumper=NxSafeDumper)
